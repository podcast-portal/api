name: .NET

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]
env:
  MONGO_URL: ${{ secrets.MONGO_URL }}
  RABBIT_URL: ${{ secrets.RABBIT_URL }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Docker Login
      uses: docker/login-action@v1.10.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v2.6.1
      with:
        context: .
        file: ./PodcastManager.Api/Dockerfile
        no-cache: true
        push: true
        tags: menoncello/podcast-manager.api

    - name: deploy
      uses: cross-the-world/ssh-scp-ssh-pipelines@latest
      with:
        host: ${{ secrets.DEPLOY_SERVER }}
        user: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
        first_ssh: |
          mkdir -p /home/deployer/PodcastManager.Api
        scp: |
          './docker-compose.yml' => /home/deployer/PodcastManager.Api/
        last_ssh: |
          export MONGO_URL="${{ secrets.MONGO_URL }}"
          export RABBIT_URL="${{ secrets.RABBIT_URL }}"
          docker stack deploy --compose-file /home/deployer/PodcastManager.Api/docker-compose.yml podcast-api
          rm -rf /home/deployer/PodcastManager.Api
